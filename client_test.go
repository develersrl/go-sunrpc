package sunrpc

import (
	"bytes"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestWriteCall(t *testing.T) {
	var buf bytes.Buffer

	err := WriteCall(&buf, PortmapperProgram, PortmapperVersion, PortmapperPortSet, mapping{
		Program:  1,
		Version:  1,
		Protocol: Tcp,
		Port:     1,
	})

	assert.Nil(t, err)

	expected := []byte{
		//   Xid (ignored)  //
		0x80, 0x00, 0x00, 0x38, 0x54, 0x88, 0x7d, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
		0x00, 0x01, 0x86, 0xa0, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
		0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01,
	}

	assert.Equal(t, expected[0:4], buf.Bytes()[0:4]) // Test marker
	assert.Equal(t, expected[8:], buf.Bytes()[8:])   // Then the rest of the payload, excluding the transaction id
}
